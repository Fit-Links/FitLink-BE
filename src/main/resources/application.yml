# common profile

spring:
  application:
    name: FitLink-BE
  profiles:
    default: local
    include: secret
server:
  port: 8080

---
# local profile

spring:
  profiles:
    default: local
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: Google
            client-id:
            client-secret:
            scope:
              - email
              - profile
          kakao:
            client-name: Kakao
            client-id:
            client-secret:
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
          naver:
            client-name: Naver
            client-id:
            client-secret:
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile
              - email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  datasource:
    hikari:
      jdbc-url:
      driver-class-name:
      username:
      password:

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 500

---

# dev profile

spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: Google
            client-id:
            client-secret:
            scope:
              - email
              - profile
          kakao:
            client-name: Kakao
            client-id:
            client-secret:
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
          naver:
            client-name: Naver
            client-id:
            client-secret:
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile
              - email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  datasource:
    hikari:
      jdbc-url:
      driver-class-name:
      username:
      password:

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 500
logging:
  level:
    org:
      web: debug
      hibernate:
        SQL: debug
